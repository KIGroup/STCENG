<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.DeepSee.TrainingCube.StarTeacher">
<Description><![CDATA[
Dimension table for cube 'TrainingCube'
THIS IS A GENERATED CLASS, DO NOT EDIT.<br/>
Generated by %DeepSee.Generator:%CreateStarTable.]]></Description>
<Owner/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%DeepSee.DimensionTable</Super>
<TimeCreated>63753,77407.317406</TimeCreated>
<GeneratedBy>Stc.DeepSee.TrainingCube.CLS</GeneratedBy>

<Parameter name="CUBENAME">
<Default>TrainingCube</Default>
</Parameter>

<Parameter name="DESCRIPTIONPROPERTY"/>

<Parameter name="KEYPROPERTY">
<Default>DxTeacher</Default>
</Parameter>

<Index name="Primary">
<Properties>DxTeacher</Properties>
<Unique>1</Unique>
</Index>

<Index name="Idx2">
<Properties>DxrFullNameViaTeacher</Properties>
</Index>

<Property name="DxTeacher">
<Description><![CDATA[
Свойство измерения: DxTeacher<br/>
Источник: Teacher]]></Description>
<Type>%String</Type>
<Required>1</Required>
<Parameter name="COLLATION" value="SQLUPPER(113)"/>
<Parameter name="MAXLEN" value="2000"/>
</Property>

<Property name="DxrFullNameViaTeacher">
<Description><![CDATA[
Свойство измерения: DxrFullNameViaTeacher<br/>
Источник: Teacher.FullName]]></Description>
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode>Set {DxrFullNameViaTeacher}=##class(Stc.DeepSee.TrainingCube.StarTeacher).%FetchDxrFullNameViaTeacher({DxTeacher})</SqlComputeCode>
<SqlComputed>1</SqlComputed>
<Parameter name="MAXLEN" value="2000"/>
</Property>

<Method name="%Count">
<Description><![CDATA[
Return the total number of members within this dimension.<br/>
Generated by %DeepSee.Generator:%CreateStarTable.]]></Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
 Set tCount = 0
 &sql(SELECT COUNT(*) INTO :tCount FROM Stc_DeepSee_TrainingCube.StarTeacher)
 Quit tCount
]]></Implementation>
</Method>

<Method name="DxTeacherIsValid">
<Description><![CDATA[
Validate the KEY value for this dimension.<br/>
Generated by %DeepSee.Generator:%CreateStarTable.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pArg:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[ Quit ##class(%DeepSee.DimensionTable).%ValidateKEY(pArg)
]]></Implementation>
</Method>

<Method name="%GetMemberSpec">
<Description><![CDATA[
Return the specification string for the given member.<br/>
Generated by %DeepSee.Generator:%CreateStarTable.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pMemberId:%String,pCubeName:%String,pDimNo:%Integer,pHierNo:%Integer,pLevelNo:%Integer</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 Set tSpec = ""
 Set:pMemberId'="" tSpec = "&["_$$$dsEscapeIdent(..DxTeacherGetStored(pMemberId))_"]"
 Quit tSpec
]]></Implementation>
</Method>

<Method name="%GetDimensionProperty">
<Description><![CDATA[
Fetch the value of a given dimension property.<br/>
Generated by %DeepSee.Generator:%CreateStarTable.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pProp:%String,pID:%String,*pFormat:%String,*pType:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 Set pProp = $$$UPPER(pProp)
 Set tValue=""
 Set pFormat=""
 If (pProp="DXTEACHER") {
  &sql(SELECT DxTeacher INTO :tValue FROM Stc_DeepSee_TrainingCube.StarTeacher WHERE %ID = :pID)
  Set pType="%Library.String"
 }
 ElseIf (pProp="DXRFULLNAMEVIATEACHER") {
  &sql(SELECT DxrFullNameViaTeacher INTO :tValue FROM Stc_DeepSee_TrainingCube.StarTeacher WHERE %ID = :pID)
  Set pType="%Library.String"
 }
 Quit tValue
]]></Implementation>
</Method>

<Method name="%FetchDxrFullNameViaTeacher">
<Description><![CDATA[
Fetch the current value of %FetchDxrFullNameViaTeacher.<br/>
Generated by %DeepSee.Generator:%CreateStarTable.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pKey:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 // If we don't a value, show key as this is most likely the NULL substitute
 Set tValue=pKey
 &SQL(SELECT FullName INTO :tValue FROM Stc_Data.Person WHERE %ID = :pKey)
 Quit tValue
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^DeepSee.Dimension("STC.DEEPSEE.TRAININGCUBE.STARTEACHER")</DataLocation>
<DefaultData>StarTeacherDefaultData</DefaultData>
<IdLocation>^DeepSee.Dimension("STC.DEEPSEE.TRAININGCUBE.STARTEACHER")</IdLocation>
<IndexLocation>^DeepSee.DimensionI("STC.DEEPSEE.TRAININGCUBE.STARTEACHER")</IndexLocation>
<StreamLocation>^DeepSee.DimensionS("STC.DEEPSEE.TRAININGCUBE.STARTEACHER")</StreamLocation>
<ExtentSize>100</ExtentSize>
<Data name="StarTeacherDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>DxTeacher</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
